name: CICD_Pipeline

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  REGISTRY: ghcr.io
  AZURE_WEBAPP_NAME: davidzhumsa23    # set this to your application's name
  NODE_VERSION: '18.x'

jobs:
  build_frontend:
    runs-on: ubuntu-latest
    defaults:
       run:
         working-directory: ./frontend
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        cache-dependency-path: './frontend'

    - name: Install dependencies
      run: npm install

    - name: Build
      run: npm run build

    - name: Test
      run: npm run test --if-present
  
  build_backend:
    runs-on: ubuntu-latest
    defaults:
       run:
         working-directory: ./backend
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 7.0.x

    - name: Restore dependencies
      run: dotnet restore

    - name: Build
      run: dotnet build --no-restore

    - name: Test
      run: dotnet test --no-build --verbosity normal

  docker:
    runs-on: ubuntu-latest
    needs: [build_backend, build_frontend]
    permissions:
      contents: read
      packages: write
    strategy:
      matrix:
        include:
          - image: msafrontend
            context: ./frontend
            dockerfile: frontend/Dockerfile
          - image: msabackend
            context: ./backend
            dockerfile: backend/Dockerfile

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Set lower case owner name
      run: |
        echo "OWNER_LC=${OWNER,,}" >>${GITHUB_ENV}
      env:
        OWNER: '${{ github.repository_owner }}'

    - name: Log into registry ${{ env.REGISTRY }}
      if: github.event_name != 'pull_request'
      uses: docker/login-action@v2
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Extract Docker metadata 
      id: meta
      uses: docker/metadata-action@v4
      with:
        images: ${{ env.REGISTRY }}/${{ env.OWNER_LC }}/${{ matrix.image }}

    - name: Build and push
      uses: docker/build-push-action@v4
      with:
        context: ${{matrix.context}}
        file: ${{ matrix.dockerfile }}
        push: ${{ github.event_name != 'pull_request' }}
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
      
  deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: none
    needs: docker
    strategy:
      matrix:
        include:
          - image: msafrontend
          - image: msabackend

    steps:
    - name: Set lower case owner name
      run: |
        echo "OWNER_LC=${OWNER,,}" >>${GITHUB_ENV}
      env:
        OWNER: '${{ github.repository_owner }}'

    - name: 'Deploy to Azure Web App'
      id: deploy-to-webapp
      uses: azure/webapps-deploy@v2
      with:
        app-name: ${{ env.AZURE_WEBAPP_NAME }}
        publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
        images: '${{ env.REGISTRY }}/${{ env.OWNER_LC }}/${{ matrix.image }}:${{ github.sha }}'
 